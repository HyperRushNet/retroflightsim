particles[id].distanceSq = computeCameraDistance(cameraPos, cameraDir, particles[id].particle);


	private float computeCameraDistance(float[] cameraPos, float[] cameraDir, Particle particle) {
		float d = MathUtils.planeDfromNormalAndPoint(cameraDir, cameraPos);
		return MathUtils.distanceFromPlane(particle.position, cameraDir, d);
	}

	public static float planeDfromNormalAndPoint(float[] normal, float[] point) {
		return -normal[0] * point[0] - normal[1] * point[1] - normal[2] * point[2];
	}

	public static float distanceFromPlane(float[] point, float[] planeNormal, float planeD) {
		return point[0] * planeNormal[0] + point[1] * planeNormal[1] + point[2] * planeNormal[2] + planeD;
	}





